name: CICD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install 
        run: npm install

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: |
          export NODE_ENV=development
          npm ci --include=dev

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Run Prettier write
        run: npx prettier --write .

      - name: Run Prettier check
        run: npx prettier --check .

      - name: Lint code
        run: npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - name: Run tests
        run: npm test

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: anacondong/my-nextjs-demo:latest

  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          github-token: ${{ secrets.MY_GITHUB_TOKEN }}
        env:
          VERCEL_ENV: production
